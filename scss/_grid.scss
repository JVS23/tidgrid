//
//  _grid.scss
//

.row {
  box-sizing: border-box;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;

  @include gap($default-gap);
}

@include each-breakpoint() {
  @include global-property(row-auto) {
    @include child-col() {
      @include col-auto();
    }
  }

  @include global-property(row-wide) {
    @include child-col() {
      @include col-wide();
    }
  }

  @include global-property(row-shrink) {
    @include child-col() {
      @include col-shrink();
    }
  }

  @include global-property(row-narrow) {
    @include child-col() {
      @include col-narrow();
    }
  }

  @include each-column() using ($column) {
    $column-width: #{100% / $columns * $column};

    @include global-property(row-colspan-#{$column}) {
      @include child-col() {
        @include col-span($column-width);
      }
    }
  }

  @include global-property(row-reverse) {
    flex-flow: row-reverse wrap-reverse;
  }

  @include global-property(row-reverse-none) {
    flex-flow: row wrap;
  }

  @include global-property(align-left) {
    justify-content: flex-start;
  }

  @include global-property(align-center) {
    justify-content: center;
  }

  @include global-property(align-right) {
    justify-content: flex-end;
  }

  @include global-property(align-top) {
    align-items: flex-start;
  }

  @include global-property(align-middle) {
    align-items: center;
  }

  @include global-property(align-bottom) {
    align-items: flex-end;
  }

  @include global-property(space-between) {
    justify-content: space-between;
  }

  @include global-property(space-around) {
    justify-content: space-around;
  }

  @include global-property(space-evenly) {
    justify-content: space-evenly;
  }

  @include global-property(flex-wrap) {
    flex-wrap: wrap;
  }

  @include global-property(row-wrap-none) {
    flex-wrap: nowrap;
  }

  @for $gap from 1 through $gaps {
    $gap-size: $base-gap * $gap;

    @include global-property(gap-#{$gap}) {
      @include gap($gap-size);
    }

    @include global-property(gap-v-#{$gap}) {
      @include gap-v($gap-size);
    }

    @include global-property(gap-h-#{$gap}) {
      @include gap-h($gap-size);
    }
  }
}

.col {
  flex: none;
  width: 100%;
  box-sizing: border-box;
}


@include each-breakpoint() {
  @include global-property(col-auto) {
    @include col-auto();
  }

  @include global-property(col-wide) {
    @include col-wide();
  }

  @include global-property(col-shrink) {
    @include col-shrink();
  }

  @include global-property(col-narrow) {
    @include col-narrow();
  }

  @include each-column() using ($column) {

    @include global-property(col-span-#{$column}) {
      $column-width: #{100% / $columns * $column};
      @include col-span($column-width);
    }

    @include global-property(col-offset-#{$column - 1}) {
      $offset-width: #{100% / $columns * ($column - 1)};
      @include col-offset($offset-width);
    }
  }

  @include global-property(col-first) {
    @include col-move(first);
  }

  @include global-property(col-last) {
    @include col-move(last);
  }
}

.break {
  width: 100%;
}
